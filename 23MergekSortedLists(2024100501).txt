#23MergekSortedLists(2024100501)
import heapq
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
      
class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        result = ListNode()
        currentResult = result
        heap = []
        for i, node in enumerate(lists):
            if node:
                heapq.heappush(heap,(node.val, i, node))
        while heap:
            val, index, current = heapq.heappop(heap)
            currentResult.next = ListNode(val)
            currentResult = currentResult.next
            if current.next:
                heapq.heappush(heap, (current.next.val, index, current.next))
        return result.next